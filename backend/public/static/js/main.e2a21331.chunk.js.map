{"version":3,"sources":["serviceWorker.js","components/Navbar.js","components/LastEpisode.js","components/EpisodeList.js","components/Suscribe.js","components/NominaInvitado.js","components/App.js","hooks/useForm.js","services/auth.js","components/Signup.js","components/AdminHome.js","components/LoginHome.js","components/Router.js","index.js"],"names":["Boolean","window","location","hostname","match","Navbar","react_default","a","createElement","className","href","src","alt","es_button","type","react_router_dom","to","Component","LastEpisode","controls","EpisodeList","Suscribe","handleSubmit","e","preventDefault","console","log","es_form","onSubmit","this","name","placeholder","Item","htmlType","NominaInvitado","App","layout","Header","components_Navbar","components_LastEpisode","components_EpisodeList","tagline","components_NominaInvitado","components_Suscribe","Footer","useForm","_useState","useState","_useState2","Object","slicedToArray","form","setForm","persist","prevState","objectSpread","defineProperty","target","value","baseURL","AuthService","classCallCheck","service","axios","create","withCredentials","data","post","get","goBack","history","back","withRouter","props","authService","_useForm","_useForm2","handleInputs","Content","onChange","onClick","signup","then","response","catch","err","login","push","logout","AdminHome","components_Signup","LoginHome","Router","react_router","exact","path","component","ReactDOM","render","components_Router","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e2a21331.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component } from \"react\";\nimport { Button } from \"antd\";\nimport { Link } from \"react-router-dom\";\n\nclass Navbar extends Component {\n  render() {\n    return (\n      <div>\n        <nav className=\"navbar\">\n          <a href=\"https://www.xylocapital.com/\">\n            <img src=\"XyloCapital.png\" alt=\"Xylo\" className=\"logo\" />{\" \"}\n          </a>\n          <div className=\"navBord\">\n            <ul className=\"nav-links\">\n              <li className=\"nav-item\">\n                <Button type=\"primary\">\n                  <Link to=\"/\">Home</Link>\n                </Button>\n              </li>\n              <li className=\"nav-item\">\n                <Button type=\"primary\">Donde escuchar</Button>\n              </li>\n              <li className=\"nav-item\">\n                <Button type=\"primary\">Recomienda Invitado</Button>\n              </li>\n              <li className=\"nav-item\">\n                <Button type=\"primary\">\n                  <Link to=\"/signup\">Signup</Link>\n                </Button>\n              </li>\n            </ul>\n          </div>\n        </nav>\n      </div>\n    );\n  }\n}\n\nexport default Navbar;\n","import React, { Component } from \"react\";\nimport { Button } from \"antd\";\n\nclass LastEpisode extends Component {\n  render() {\n    return (\n      <main>\n        <div className=\"lastEpisode\">\n          <img src=\"alanaLogo.png\" alt=\"Alana\" className=\"imagenesAnteriores\" />\n\n          <h3>\n            <b>Ignacio Martinez </b>fundador de Alana\n          </h3>\n          <audio src=\"pruebaAlanaElon.mp3\" controls />\n          <p className=\"parrafo\">\n            <h4>\n              Ignacio nos platica algunos de los retos para construir una\n              empresa y como por fin esta disfrutando de algunos frutos al ser\n              aceptado en una de las aceleradoras más reconocidas del mundo.\n            </h4>\n          </p>\n\n          <Button type=\"primary\" className=\"button3\">\n            Suscribirse\n          </Button>\n          <Button type=\"primary\" className=\"parrafo\">\n            Compartir\n          </Button>\n        </div>\n      </main>\n    );\n  }\n}\n\nexport default LastEpisode;\n","import React, { Component } from \"react\";\n\nclass EpisodeList extends Component {\n  render() {\n    return (\n      <main className=\"episodeList\">\n        <div>\n          <img\n            src=\"cuantoLogo.png\"\n            alt=\"Cuanto\"\n            className=\"imagenesAnteriores\"\n          />\n          <h3>\n            <b>Felipe Echandi</b> fundador de Cuanto\n          </h3>\n          <audio src=\"pruebaAlanaElon.mp3\" controls />\n          <p>\n            <h4>Aplicación para recibir pagos en linea</h4>\n          </p>\n        </div>\n        <div>\n          <img\n            src=\"prescrypto.png\"\n            alt=\"Prescrypto\"\n            className=\"imagenesAnteriores\"\n          />\n          <h3>\n            <b>Everardo Barojas</b> fundador de Prescrypto\n          </h3>\n          <audio src=\"pruebaAlanaElon.mp3\" controls />\n          <p>\n            <h4>Recetario medico basado en blockchain.</h4>\n          </p>\n        </div>\n        <div>\n          <img src=\"fintual.png\" alt=\"Fintual\" className=\"imagenesAnteriores\" />\n          <h3>\n            <b>Pedro Pineda</b> fundador de Fintual.\n          </h3>\n          <audio src=\"pruebaAlanaElon.mp3\" controls />\n          <p>\n            <h4>Un Roboadvisor para Latam.</h4>\n          </p>\n        </div>\n      </main>\n    );\n  }\n}\n\nexport default EpisodeList;\n","import React, { Component } from \"react\";\nimport { Button, Form } from \"antd\";\n\nclass Suscribe extends Component {\n  handleSubmit = e => {\n    e.preventDefault();\n    console.log(\"funciona\");\n    // this.props.form.validateFields((err, values) => {\n    //   if (!err) {\n    //     const { keys, names } = values;\n    //     console.log(\"Received values of form: \", values);\n    //     console.log(\"Merged values:\", keys.map(key => names[key]));\n    //   }\n    // });\n  };\n\n  render() {\n    return (\n      <div className=\"suscribe\">\n        <h3>Enterate de todas las noticias y nuevos episodios</h3>\n        <Form onSubmit={this.handleSubmit} className=\"form\">\n          <input type=\"text\" name=\"email\" placeholder=\"email\" />\n          <Form.Item>\n            <Button type=\"primary\" htmlType=\"submit\">\n              Suscribete\n            </Button>\n          </Form.Item>\n        </Form>\n      </div>\n    );\n  }\n}\n\nexport default Suscribe;\n","import React, { Component } from \"react\";\nimport { Button, Form, Icon } from \"antd\";\n\nclass NominaInvitado extends Component {\n  render() {\n    return (\n      <div className=\"nomina\">\n        <h3>\n          Quieres escuchar una entrevista con alguien en particular?? Nominalo\n        </h3>\n\n        {/* <form action=\"submit\">\n          <input type=\"text\" name=\"email\" placeholder=\"Nomina a alguien\" />\n          <input type=\"submit\" defaultValue=\"Vota\" />\n        </form> */}\n        <Form onSubmit={this.handleSubmit} className=\"form\">\n          <input type=\"text\" name=\"email\" placeholder=\"Emprendedor\" />\n          <Form.Item>\n            <Button type=\"primary\" htmlType=\"submit\">\n              Nominalo\n            </Button>\n          </Form.Item>\n        </Form>\n      </div>\n    );\n  }\n}\n\nexport default NominaInvitado;\n","import React, { Component } from \"react\";\nimport Navbar from \"./Navbar\";\nimport LastEpisode from \"./LastEpisode\";\nimport EpisodeList from \"./EpisodeList\";\nimport Suscribe from \"./Suscribe\";\nimport NominaInvitado from \"./NominaInvitado\";\nimport { Layout, Button } from \"antd\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Layout>\n        <div>\n          <Layout.Header className=\"navbar\">\n            <Navbar />\n          </Layout.Header>\n\n          <div className=\"textoMedio\">\n            <b>Última entrevista</b>\n          </div>\n\n          <LastEpisode />\n          <div className=\"textoMedio\">\n            <b>Entrevistas anteriores</b>\n          </div>\n          <EpisodeList tagline=\"Ultimo epi\" />\n          <NominaInvitado />\n          <Suscribe />\n\n          <Layout.Footer className=\"contacto2\">\n            <div className=\"contacto\">\n              <Button type=\"primary\"> Contactanos </Button>\n            </div>\n          </Layout.Footer>\n        </div>\n      </Layout>\n    );\n  }\n}\n\nexport default App;\n","import { useState } from \"react\";\n\nconst useForm = () => {\n  const [form, setForm] = useState({});\n\n  const handleInputs = e => {\n    e.persist();\n    setForm(prevState => ({\n      ...prevState,\n      [e.target.name]: e.target.value\n    }));\n  };\n\n  return [form, handleInputs];\n};\n\nexport default useForm;\n","import axios from \"axios\";\nconst baseURL = \"https://fundadores.herokuapp.com\";\n\n//https://fundadores.herokuapp.com\n\nclass AuthService {\n  constructor() {\n    this.service = axios.create({\n      baseURL,\n      withCredentials: true\n    });\n  }\n  signup(data) {\n    return this.service.post(\"/signup\", data);\n  }\n  login(data) {\n    return this.service.post(\"/login\", data);\n  }\n  logout() {\n    return this.service.get(\"/logout\");\n  }\n  profile() {\n    return this.service.get(\"/profile\");\n  }\n}\n\nexport default AuthService;\n","import React from \"react\";\nimport useForm from \"../hooks/useForm\";\nimport AuthService from \"../services/auth\";\nimport { Button } from \"antd\";\nimport { Layout } from \"antd\";\nimport { withRouter } from \"react-router-dom\";\n\nfunction goBack() {\n  window.history.back();\n}\n\nconst Signup = props => {\n  const authService = new AuthService();\n  const [form, handleInputs] = useForm();\n\n  const handleSignup = () => {\n    authService\n      .signup(form)\n      .then(response => {\n        console.log(response);\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  const handleLogin = () => {\n    authService\n      .login(form)\n      .then(response => {\n        console.log(response);\n        props.history.push(\"/login\");\n        // <Redirect to=\"/login\" />\n      })\n      .catch(err => {\n        console.log(err.response);\n      });\n  };\n\n  const handleLogout = () => {\n    authService\n      .logout()\n      .then(response => {\n        console.log(response);\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  return (\n    <Layout.Content className=\"signup\">\n      <main>\n        <div className=\"signup2\">\n          <h2>Signup</h2>\n\n          <input\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"mail\"\n            onChange={e => handleInputs(e)}\n          />\n          <input\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"password\"\n            onChange={e => handleInputs(e)}\n          />\n          <Button type=\"primary\" onClick={handleSignup}>\n            Signup\n          </Button>\n        </div>\n        <div>\n          <h2>Login</h2>\n          <input\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"email\"\n            onChange={e => handleInputs(e)}\n          />\n          <input\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"password\"\n            onChange={e => handleInputs(e)}\n          />\n          <Button type=\"primary\" onClick={handleLogin}>\n            Login\n          </Button>\n        </div>\n        <div className=\"downbuttons\">\n          <div>\n            <Button type=\"danger\" onClick={handleLogout}>\n              Logout\n            </Button>\n          </div>\n          <div>\n            <Button type=\"danger\" onClick={goBack}>\n              Back\n            </Button>\n          </div>\n        </div>\n      </main>\n    </Layout.Content>\n  );\n};\n\nexport default withRouter(Signup);\n","import React, { Component } from \"react\";\nimport Navbar from \"./Navbar\";\nimport Signup from \"./Signup\";\n\nclass AdminHome extends Component {\n  render() {\n    return (\n      <main>\n        <Navbar />\n        <Signup />\n      </main>\n    );\n  }\n}\n\nexport default AdminHome;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { Button } from \"antd\";\n\nclass LoginHome extends Component {\n  render() {\n    return (\n      <main>\n        {/* <Navbar /> */}\n        <div className=\"login\">\n          <h3> You are in!</h3>\n          <Button type=\"primary\">\n            <Link to=\"/\">GO HOME!</Link>\n          </Button>\n        </div>\n      </main>\n    );\n  }\n}\n\nexport default LoginHome;\n","import React from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport App from \"./App\";\nimport AdminHome from \"./AdminHome\";\nimport LoginHome from \"./LoginHome\";\n\nconst Router = () => (\n  <BrowserRouter>\n    <Switch>\n      <Route exact path=\"/\" component={App} />\n    </Switch>\n    <Route exact path=\"/signup\" component={AdminHome} />\n    <Route exact path=\"/login\" component={LoginHome} />\n  </BrowserRouter>\n);\n\nexport default Router;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"antd/dist/antd.css\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport Router from \"./components/Router\";\n\nReactDOM.render(<Router />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}