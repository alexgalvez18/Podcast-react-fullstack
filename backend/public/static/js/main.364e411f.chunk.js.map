{"version":3,"sources":["serviceWorker.js","components/Navbar.js","components/LastEpisode.js","components/EpisodeList.js","components/Suscribe.js","components/NominaInvitado.js","components/Contacto.js","components/App.js","hooks/useForm.js","services/auth.js","components/Signup.js","components/AdminHome.js","components/Router.js","index.js"],"names":["Boolean","window","location","hostname","match","Navbar","react_default","a","createElement","className","es_button","type","Component","LastEpisode","src","alt","controls","EpisodeList","Suscribe","console","log","action","onSubmit","this","suscribeToNewsletter","name","placeholder","defaultValue","NominaInvitado","Contacto","App","layout","Header","components_Navbar","components_LastEpisode","components_EpisodeList","tagline","components_Suscribe","components_NominaInvitado","Footer","components_Contacto","useForm","_useState","useState","_useState2","Object","slicedToArray","form","setForm","e","persist","prevState","objectSpread","defineProperty","target","value","baseURL","AuthService","classCallCheck","service","axios","create","withCredentials","data","post","get","Signup","authService","_useForm","_useForm2","handleInputs","onChange","onClick","signup","then","response","catch","err","login","logout","AdminHome","components_Signup","Router","react_router_dom","react_router","exact","path","component","ReactDOM","render","components_Router","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.364e411f.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component } from \"react\";\nimport { Button } from \"antd\";\n\nclass Navbar extends Component {\n  render() {\n    return (\n      <div>\n        <nav className=\"navbar\">\n          <ul className=\"nav-links\">\n            <li className=\"nav-item\">\n              <Button type=\"primary\">Episodes</Button>\n            </li>\n            <li className=\"nav-item\">\n              <Button type=\"primary\">Donde escuchar</Button>\n            </li>\n            <li className=\"nav-item\">\n              <Button type=\"primary\">Recomienda Invitado</Button>\n            </li>\n            <li className=\"nav-item\">\n              <Button type=\"primary\">Signup</Button>\n            </li>\n          </ul>\n        </nav>\n      </div>\n    );\n  }\n}\n\nexport default Navbar;\n","import React, { Component } from \"react\";\nimport { Button } from \"antd\";\n\nclass LastEpisode extends Component {\n  render() {\n    return (\n      <div className=\"lastEpisode\">\n        <img src=\"alanaLogo.png\" alt=\"Alana\" />\n        <h3>Ignacio Martinez, fundador y Ceo de Alana</h3>\n        <audio src=\"pruebaAlanaElon.mp3\" controls />\n        <p>\n          Ignacio nos platica de los retos que ha tenido construir una empresa y\n          como ahora por fin esta disfrutando de algunos frutos al ser aceptado\n          en una de las aceleradoras más reconocidas del mundo\n        </p>\n\n        <Button type=\"danger\">Suscribirse</Button>\n        <Button type=\"danger\">Compartir</Button>\n      </div>\n    );\n  }\n}\n\nexport default LastEpisode;\n","import React, { Component } from \"react\";\n\nclass EpisodeList extends Component {\n  render() {\n    return (\n      <main className=\"episodeList\">\n        <div>\n          <img src=\"\" alt=\"Alana\" />\n          <h3>Episodio -1</h3>\n          <audio src=\"pruebaAlanaElon.mp3\" controls />\n          <p>res Ipso</p>\n        </div>\n        <div>\n          <img src=\"\" alt=\"Alana\" />\n          <h3>Episodio -2</h3>\n          <audio src=\"pruebaAlanaElon.mp3\" controls />\n          <p>res Ipso</p>\n        </div>\n        <div>\n          <img src=\"\" alt=\"Alana\" />\n          <h3>Episodio -3</h3>\n          <audio src=\"pruebaAlanaElon.mp3\" controls />\n          <p>res Ipso</p>\n        </div>\n      </main>\n    );\n  }\n}\n\nexport default EpisodeList;\n","import React, { Component } from \"react\";\nimport { Button } from \"antd\";\n\nclass Suscribe extends Component {\n  suscribeToNewsletter() {\n    console.log(\"agrega el mail a la lista de correos\");\n  }\n\n  render() {\n    return (\n      <div className=\"suscribe\">\n        <h3>Enterate de todas las noticias y nuevos episodios</h3>\n        <form action=\"submit\" onSubmit={this.suscribeToNewsletter}>\n          <input type=\"text\" name=\"email\" placeholder=\"email\" />\n\n          <input type=\"submit\" defaultValue=\"Suscribete\" />\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default Suscribe;\n","import React, { Component } from \"react\";\n\nclass NominaInvitado extends Component {\n  render() {\n    return (\n      <div>\n        Quieres escuchar una entrevista con alguien en particular?? Nominalo\n        <form action=\"submit\">\n          <input type=\"text\" name=\"email\" placeholder=\"Nomina a alguien\" />\n          <input type=\"submit\" defaultValue=\"Vota\" />\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default NominaInvitado;\n","import React, { Component } from \"react\";\n\nclass Contacto extends Component {\n  render() {\n    return (\n      <div className=\"contacto\">\n        Contacto y redes\n        <button>Mail </button>\n      </div>\n    );\n  }\n}\n\nexport default Contacto;\n","import React, { Component } from \"react\";\nimport Navbar from \"./Navbar\";\nimport LastEpisode from \"./LastEpisode\";\nimport EpisodeList from \"./EpisodeList\";\nimport Suscribe from \"./Suscribe\";\nimport NominaInvitado from \"./NominaInvitado\";\nimport Contacto from \"./Contacto\";\nimport { Layout } from \"antd\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Layout>\n        <div>\n          <Layout.Header>\n            <Navbar />\n          </Layout.Header>\n          {/* <Layout.Content className=\"content\" /> */}\n          <LastEpisode />\n          <EpisodeList tagline=\"Ultimo epi\" />\n          <Suscribe />\n          <NominaInvitado />\n\n          <Layout.Footer>\n            <Contacto />\n          </Layout.Footer>\n        </div>\n      </Layout>\n    );\n  }\n}\n\nexport default App;\n","import { useState } from \"react\";\n\nconst useForm = () => {\n  const [form, setForm] = useState({});\n\n  const handleInputs = e => {\n    e.persist();\n    setForm(prevState => ({\n      ...prevState,\n      [e.target.name]: e.target.value\n    }));\n  };\n\n  return [form, handleInputs];\n};\n\nexport default useForm;\n","import axios from \"axios\";\nconst baseURL = \"http://localhost:3000\";\n\nclass AuthService {\n  constructor() {\n    this.service = axios.create({\n      baseURL,\n      withCredentials: true\n    });\n  }\n  signup(data) {\n    return this.service.post(\"/signup\", data);\n  }\n  login(data) {\n    return this.service.post(\"/login\", data);\n  }\n  logout() {\n    return this.service.get(\"/logout\");\n  }\n  profile() {\n    return this.service.get(\"/profile\");\n  }\n}\n\nexport default AuthService;\n","import React from \"react\";\nimport useForm from \"../hooks/useForm\";\nimport AuthService from \"../services/auth\";\n\nfunction Signup() {\n  const authService = new AuthService();\n  const [form, handleInputs] = useForm();\n\n  const handleSignup = () => {\n    authService\n      .signup(form)\n      .then(response => {\n        console.log(response);\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  const handleLogin = () => {\n    authService\n      .login(form)\n      .then(response => {\n        console.log(response);\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  const handleLogout = () => {\n    authService\n      .logout()\n      .then(response => {\n        console.log(response);\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  return (\n    <main>\n      <div className=\"signup\">\n        <h2>Signup</h2>\n        <input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Name\"\n          onChange={e => handleInputs(e)}\n        />\n        <input type=\"email\" name=\"email\" onChange={e => handleInputs(e)} />\n        <input\n          type=\"password\"\n          name=\"password\"\n          onChange={e => handleInputs(e)}\n        />\n        <button onClick={handleSignup}>Signup</button>\n      </div>\n      <div className=\"login\">\n        <h2>Login</h2>\n        <input type=\"email\" name=\"email\" onChange={e => handleInputs(e)} />\n        <input\n          type=\"password\"\n          name=\"password\"\n          onChange={e => handleInputs(e)}\n        />\n        <button onClick={handleLogin}>Login</button>\n      </div>\n      <div>\n        <button onClick={handleLogout}>Logout</button>\n      </div>\n    </main>\n  );\n}\n\nexport default Signup;\n","import React, { Component } from \"react\";\nimport Navbar from \"./Navbar\";\nimport Signup from \"./Signup\";\n\nclass AdminHome extends Component {\n  render() {\n    return (\n      <main>\n        <Navbar />\n        <Signup />\n      </main>\n    );\n  }\n}\n\nexport default AdminHome;\n","import React from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport App from \"./App\";\nimport AdminHome from \"./AdminHome\";\n\nconst Router = () => (\n  <BrowserRouter>\n    <Switch>\n      <Route exact path=\"/\" component={App} />\n    </Switch>\n    <Route exact path=\"/signup\" component={AdminHome} />\n  </BrowserRouter>\n);\n\nexport default Router;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"antd/dist/antd.css\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport Router from \"./components/Router\";\n\nReactDOM.render(<Router />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}